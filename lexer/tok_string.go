// Code generated by "stringer -type=Tok -linecomment"; DO NOT EDIT.

package lexer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EOF-0]
	_ = x[Illegal-1]
	_ = x[LeftParen-2]
	_ = x[RightParen-3]
	_ = x[LeftBracket-4]
	_ = x[RightBracket-5]
	_ = x[Comma-6]
	_ = x[Plus-7]
	_ = x[Minus-8]
	_ = x[Multiply-9]
	_ = x[Divide-10]
	_ = x[And-11]
	_ = x[Or-12]
	_ = x[Implies-13]
	_ = x[Less-14]
	_ = x[LessEq-15]
	_ = x[Equal-16]
	_ = x[NotEqual-17]
	_ = x[Greater-18]
	_ = x[GreaterEq-19]
	_ = x[In-20]
	_ = x[Is-21]
	_ = x[Not-22]
	_ = x[I64Lit-23]
	_ = x[F64Lit-24]
	_ = x[StringLit-25]
	_ = x[True-26]
	_ = x[False-27]
	_ = x[Bool-28]
	_ = x[I64-29]
	_ = x[F64-30]
	_ = x[String-31]
}

const _Tok_name = "EOFillegal()[],+-·÷∧∨⟹<≤=≠>≥∈is¬i64 literalf64 literalstring literaltruefalsebooli64f64string"

var _Tok_index = [...]uint8{0, 3, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 24, 27, 30, 31, 34, 35, 38, 39, 42, 45, 47, 49, 60, 71, 85, 89, 94, 98, 101, 104, 110}

func (i Tok) String() string {
	if i < 0 || i >= Tok(len(_Tok_index)-1) {
		return "Tok(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Tok_name[_Tok_index[i]:_Tok_index[i+1]]
}
