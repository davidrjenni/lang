// Code generated by "stringer -type=Tok -linecomment"; DO NOT EDIT.

package lexer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EOF-0]
	_ = x[Illegal-1]
	_ = x[Comment-2]
	_ = x[Identifier-3]
	_ = x[LeftParen-4]
	_ = x[RightParen-5]
	_ = x[LeftBracket-6]
	_ = x[RightBracket-7]
	_ = x[LeftBrace-8]
	_ = x[RightBrace-9]
	_ = x[Assign-10]
	_ = x[Comma-11]
	_ = x[Define-12]
	_ = x[Semicolon-13]
	_ = x[Plus-14]
	_ = x[Minus-15]
	_ = x[Multiply-16]
	_ = x[Divide-17]
	_ = x[And-18]
	_ = x[Or-19]
	_ = x[Implies-20]
	_ = x[Less-21]
	_ = x[LessEq-22]
	_ = x[Equal-23]
	_ = x[NotEqual-24]
	_ = x[Greater-25]
	_ = x[GreaterEq-26]
	_ = x[In-27]
	_ = x[Is-28]
	_ = x[Not-29]
	_ = x[I64Lit-30]
	_ = x[F64Lit-31]
	_ = x[StringLit-32]
	_ = x[True-33]
	_ = x[False-34]
	_ = x[Bool-35]
	_ = x[I64-36]
	_ = x[F64-37]
	_ = x[String-38]
	_ = x[Assert-39]
	_ = x[Break-40]
	_ = x[Continue-41]
	_ = x[Else-42]
	_ = x[For-43]
	_ = x[If-44]
	_ = x[Set-45]
	_ = x[Let-46]
}

const _Tok_name = "EOFillegalcommentidentifier()[]{}←,≔;+-·÷∧∨⟹<≤=≠>≥∈is¬i64 literalf64 literalstring literaltruefalsebooli64f64stringassertbreakcontinueelseforifsetlet"

var _Tok_index = [...]uint8{0, 3, 10, 17, 27, 28, 29, 30, 31, 32, 33, 36, 37, 40, 41, 42, 43, 45, 47, 50, 53, 56, 57, 60, 61, 64, 65, 68, 71, 73, 75, 86, 97, 111, 115, 120, 124, 127, 130, 136, 142, 147, 155, 159, 162, 164, 167, 170}

func (i Tok) String() string {
	if i < 0 || i >= Tok(len(_Tok_index)-1) {
		return "Tok(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Tok_name[_Tok_index[i]:_Tok_index[i+1]]
}
